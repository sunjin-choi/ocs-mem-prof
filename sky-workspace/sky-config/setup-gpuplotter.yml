

envs:
  SCALE: 1
  DATA_SUFFIX: _1_4  

resources:
  # No GPUs or TPUs specified, so a CPU instance will be provisioned.
  cloud: gcp
  accelerators: P100:1
  #instance_type: n1-standard-16
  ports: 8888  

workdir: ./sky-workdir

file_mounts:
  /tmp/tpcds-data:
    name: tpcds-data-blob
    store: gcs  
    mode: MOUNT  
  /tmp/tpcds-trace:
    name: tpcds-trace    
    store: gcs  
    mode: MOUNT  
  /tmp/db-ubmark-trace:
    name: db-ubmark-trace    
    store: gcs  
    mode: MOUNT  
  ~/.ssh/google_compute_engine: ~/.ssh/google_compute_engine
  ~/.ssh/google_compute_engine.pub: ~/.ssh/google_compute_engine.pub


setup: |
  echo "install binaries..."
  sudo apt-get install gcc make flex bison byacc git -y
  sudo apt-get install gcc-9 build-essential cmake postgresql postgresql-client -y  
  echo "clone main repo"
  git clone git@github.com:sunjin-choi/ocs-mem-prof.git
  cd ocs-mem-prof
  git submodule update --init --recursive
  source setup_path.sh
  #bash script/install_tpcds.sh
  bash script/install_tools.sh
  #bash script/initialize_db.sh /tmp/tpcds-data/scale-${SCALE}-rngseed-0 ${DATA_SUFFIX} ${SCALE} 0

  pip install --upgrade pip
  conda init bash
  conda create -n jupyter python=3.9 -y
  conda activate jupyter
  pip install jupyter
  pip install pandas matplotlib scikit-learn
  pip install \
    --extra-index-url=https://pypi.nvidia.com \
    cudf-cu12 dask-cudf-cu12 cuml-cu12 cugraph-cu12 cuspatial-cu12 \
    cuproj-cu12 cuxfilter-cu12 cucim pylibraft-cu12 raft-dask-cu12
  pip install datashader holoviews hvplot

run: |
  set -e # Exit if any command fails
  #eval $(ssh-agent -s)
  #ssh-add ~/.ssh/google_compute_engine
  cd ocs-mem-prof
  source setup_path.sh
  conda activate jupyter
  jupyter lab --port 8888 --no-browser --ip=0.0.0.0
